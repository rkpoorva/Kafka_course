First create one topic
kafka-topics.sh --bootstrap-server localhost:9092 --topic first_topic --create --partitions 1

kafka-console-producer.sh
//Missing required option(s) [bootstrap-server]

# producing
kafka-console-producer.sh --bootstrap-server localhost:9092 --topic first_topic
> Helloo world
> my name is poorva pasrija
>^C  (<- Ctrl + C is used to exit the producer)


# producing with properties
kafka-console-producer.sh --bootstrap-server localhost:9092 --topic first_topic --producer-property acks=all
> message is acknowleged
> fun learning kafka


# producing to a non existing topic
kafka-console-producer.sh --bootstrap-server localhost:9092 --topic new_topic
> hello world!
>hiiiiii
// [2024-06-11 16:15:35,098] WARN [Producer clientId=console-producer] Error while fetching metadata with correlation id 5 :
{firnew_topic=LEADER_NOT_AVAILABLE} (org.apache.kafka.clients.NetworkClient)

# our new topic only has 1 partition
kafka-topics.sh --bootstrap-server localhost:9092 --list
//first_topic
  new_topic     //new_topic is automatically created by default by kafka and it will have 1 partition and 1 replication factor initially

kafka-topics.sh --bootstrap-server localhost:9092 --topic new_topic --describe
//Topic: new_topic	TopicId: v7B07COVS3iiR0clUu3sDA	PartitionCount: 1	ReplicationFactor: 1	Configs:
	Topic: new_topic	Partition: 0	Leader: 0	Replicas: 0	Isr: 0


# edit config/server.properties or config/kraft/server.properties
# num.partitions=3

# produce against a non existing topic again
kafka-console-producer.sh --bootstrap-server localhost:9092 --topic new_topic_2
hello again!

# this time our topic has 3 partitions
kafka-topics.sh --bootstrap-server localhost:9092 --list
kafka-topics.sh --bootstrap-server localhost:9092 --topic new_topic_2 --describe

# overall, please create topics with the appropriate number of partitions before producing to them!


# produce with keys
kafka-console-producer.sh --bootstrap-server localhost:9092 --topic first_topic --property parse.key=true --property key.separator=:
>example key:example value
>name:poorva
//left of the colon is key and right of the colon is value

// the same key goes to the same partition we only have one partition.

   So all the messages will go to that one partition
 when you use such a producer where you have a key separator, like we just send something without a colon, you're going to get an exception,
   because while you haven't found any key separator.